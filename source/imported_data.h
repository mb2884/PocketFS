#ifndef IMPORTED_DATA_H
#define IMPORTED_DATA_H

const char* imported_text_data = "D include {F dir.h {#ifndef DIR_H\n#define DIR_H\n\n#define MAX_SUBDIRECTORIES 128\n#define MAX_FILES 128\n#define MAX_SIZE 1000\n\n#include \"file.h\"\n\nstruct Directory f\n    char name[MAX_SIZE];\n    Directory* subdirectories[MAX_SIZE];\n    File* files[MAX_SIZE];\n    int subdirectory_count;\n    int file_count;\n    Directory* parent_directory;\nb;\n\nDirectory *createDirectory(const char *name, Directory *parentDirectory);\nvoid deleteDirectory(Directory *directory);\nvoid renameDirectory(Directory *directory, const char *newName);\nFile *getFileFromDirectory(Directory *directory, const char *filename);\nFile **getAllFilesFromDirectory(Directory *directory);\nDirectory **getAllSubdirectoriesFromDirectory(Directory *directory);\nvoid moveDirectory(Directory *directory, Directory *newParentDirectory);\nvoid saveDirectory(Directory *directory);\nDirectory* loadDirectory();\nvoid serialize(Directory *directory, char **address);\nDirectory *deserialize(const char *serialized_str);\n\n#endif\n}F file.h {#ifndef FILE_H\n#define FILE_H\n#define MAX_SIZE 1000\n\ntypedef struct Directory Directory;\n\ntypedef struct f\n    char name[MAX_SIZE];\n    char data[MAX_SIZE];\n    int size;\n    int capacity;\n    int cursor_position;\n    Directory* parent_directory;\nb File;\n\nFile *createFile(char *name, Directory *parentDirectory);\nvoid writeFile(File *file, const char *data);\nvoid appendFile(File *file, const char *data);\nvoid insertAtPosition(File *file, const char *data, int position);\nvoid deleteFile(File *file);\nvoid renameFile(File *file, char *newName);\nvoid copyFile(File *sourceFile, Directory *destinationDirectory);\nvoid moveFile(File *file, Directory *newParentDirectory);\n\n#endif /* FILE_H */\n}F utils.h {#ifndef UTILS_H\n#define UTILS_H\n\n#include <stdint.h>\n#include \"dir.h\"\n#include \"file.h\"\n\n\nvoid printAllFiles();\nvoid printAllSubdirectories();\nvoid printBreak();\nvoid clearScr();\nvoid delay(uint32_t milliseconds);\n\n\n#endif\n}}";

#endif